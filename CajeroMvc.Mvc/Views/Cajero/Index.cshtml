@model List<CajeroMvc.Application.ViewModels.BillViewModel>
@{
    ViewData["Title"] = "Index";
}

@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @ViewBag.Message
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}
<h1>Dispensador de billetes</h1>

<div class="card">
    @switch (ViewBag.Mode)
    {
        case 1:
            <div class="card-header bg-primary text-light">
                Modo 1000 y 200
            </div>
            break;

        case 2:
            <div class="card-header bg-primary text-light">
                Modo 500 y 100
            </div>
            break;

        default:
            <div class="card-header bg-primary text-light">
                Modo Eficiente
            </div>
            break;
    }
    <div class="card-body">
        <form asp-controller="Cajero" asp-action="Index" method="post" class="needs-validation" novalidate>
            <label for="Monto" class="form-label">Monto a retirar</label>
            <div class="input-group has-validation">
                <span class="input-group-text" id="MoneySign">$</span>
                <input type="number" class="form-control" id="Amount" name="Amount" required/>
                <input type="hidden" name="Mode" value="@ViewBag.Mode"/>
                <div class="invalid-feedback">
                    Ingrese un monto
                </div>
            </div>
            <div class="mt-md-4 justify-content-end mb-2">
                <button class="btn btn-outline-primary" type="submit">Retirar monto</button>
            </div>
        </form>

        @if (Model.Count > 0)
        {
            @foreach(var item in Model)
            {
                <div class="card mb-2" style="font-family: monospace">
                    <div class="card-header bg-light"><strong>Factura</strong></div>
                    <div class="card-body">
                        <div class="text-center">
                            <small>Fecha: @DateOnly.FromDateTime(DateTime.Now)</small><br/>
                            <small>Hora: @TimeOnly.FromDateTime(DateTime.Now)</small>
                        </div>
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Billetes</th>
                                    <th>Cantidad</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>$100</td>
                                    <td>@item.OneHundred</td>
                                    <td>@((item.OneHundred * 100).ToString("C"))</td>
                                </tr>
                                <tr>
                                    <td>$200</td>
                                    <td>@item.TwoHundred</td>
                                    <td>@((item.TwoHundred * 200).ToString("C"))</td>
                                </tr>
                                <tr>
                                    <td>$500</td>
                                    <td>@item.FiveHundred</td>
                                    <td>@((item.FiveHundred * 500).ToString("C"))</td>
                                </tr>
                                <tr>
                                    <td>$1000</td>
                                    <td>@item.Thousand</td>
                                    <td>@((item.Thousand * 1000).ToString("C"))</td>
                                </tr>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th colspan="2">Total</th>
                                    <th>@item.Total.ToString("C")</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            }
        }
        <script>
            (() => {
              const forms = document.querySelectorAll('.needs-validation')

              // Loop over them and prevent submission
              Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                  if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                  }

                  form.classList.add('was-validated')
                }, false)
              })
            })()
        </script>
    </div>
</div>

